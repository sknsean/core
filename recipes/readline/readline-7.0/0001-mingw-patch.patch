From 77f68e56182c4e1f20a00f1dd4b1fcf4a41a1129 Mon Sep 17 00:00:00 2001
From: Sean Nyekjaer <sean.nyekjaer@prevas.dk>
Date: Thu, 3 Nov 2016 20:17:28 +0100
Subject: [PATCH] mingw patch

---
 colors.c    | 23 ++++++++++++++++++++---
 posixstat.h |  4 ----
 2 files changed, 20 insertions(+), 7 deletions(-)

diff --git a/colors.c b/colors.c
index 7859f5d..605fe27 100644
--- a/colors.c
+++ b/colors.c
@@ -37,6 +37,10 @@
 #include "posixstat.h" // stat related macros (S_ISREG, ...)
 #include <fcntl.h> // S_ISUID
 
+#ifndef S_ISDIR
+#define	S_ISDIR(m)	(((m) & S_IFMT) == S_IFDIR)
+#endif
+
 // strlen()
 #if defined (HAVE_STRING_H)
 #  include <string.h>
@@ -153,6 +157,7 @@ _rl_print_color_indicator (const char *f)
     {
       mode = astat.st_mode;
 #if defined (HAVE_LSTAT)
+#ifdef S_ISLNK
       if (S_ISLNK (mode))
 	{
 	  linkok = stat (name, &linkstat) == 0;
@@ -161,6 +166,7 @@ _rl_print_color_indicator (const char *f)
 	}
       else
 #endif
+#endif
 	linkok = 1;
     }
   else
@@ -170,8 +176,10 @@ _rl_print_color_indicator (const char *f)
 
   if (linkok == -1 && _rl_color_indicator[C_MISSING].string != NULL)
     colored_filetype = C_MISSING;
+#ifdef S_ISLNK
   else if (linkok == 0 && S_ISLNK(mode) && _rl_color_indicator[C_ORPHAN].string != NULL)
     colored_filetype = C_ORPHAN;	/* dangling symlink */
+#endif
   else if(stat_ok != 0)
     {
       static enum indicator_no filetype_indicator[] = FILETYPE_INDICATORS;
@@ -182,12 +190,17 @@ _rl_print_color_indicator (const char *f)
       if (S_ISREG (mode))
         {
           colored_filetype = C_FILE;
-
+#ifdef S_ISUID
           if ((mode & S_ISUID) != 0 && is_colored (C_SETUID))
             colored_filetype = C_SETUID;
-          else if ((mode & S_ISGID) != 0 && is_colored (C_SETGID))
+		else
+#endif
+#ifdef S_ISGID
+          if ((mode & S_ISGID) != 0 && is_colored (C_SETGID))
             colored_filetype = C_SETGID;
-          else if (is_colored (C_CAP) && 0) //f->has_capability)
+          else
+#endif
+		  if (is_colored (C_CAP) && 0) //f->has_capability)
             colored_filetype = C_CAP;
           else if ((mode & S_IXUGO) != 0 && is_colored (C_EXEC))
             colored_filetype = C_EXEC;
@@ -211,12 +224,16 @@ _rl_print_color_indicator (const char *f)
             colored_filetype = C_STICKY;
 #endif
         }
+#ifdef S_ISLNK
       else if (S_ISLNK (mode))
         colored_filetype = C_LINK;
+#endif
       else if (S_ISFIFO (mode))
         colored_filetype = C_FIFO;
+#ifdef S_ISSOCK
       else if (S_ISSOCK (mode))
         colored_filetype = C_SOCK;
+#endif
       else if (S_ISBLK (mode))
         colored_filetype = C_BLK;
       else if (S_ISCHR (mode))
diff --git a/posixstat.h b/posixstat.h
index 3eb7f29..3707f68 100644
--- a/posixstat.h
+++ b/posixstat.h
@@ -108,14 +108,12 @@
  * POSIX 1003.1 5.6.1.2 <sys/stat.h> File Modes
  */
 
-#if !defined (S_IRWXU)
 #  if !defined (S_IREAD)
 #    define S_IREAD	00400
 #    define S_IWRITE	00200
 #    define S_IEXEC	00100
 #  endif /* S_IREAD */
 
-#  if !defined (S_IRUSR)
 #    define S_IRUSR	S_IREAD			/* read, owner */
 #    define S_IWUSR	S_IWRITE		/* write, owner */
 #    define S_IXUSR	S_IEXEC			/* execute, owner */
@@ -127,12 +125,10 @@
 #    define S_IROTH	(S_IREAD  >> 6)		/* read, other */
 #    define S_IWOTH	(S_IWRITE >> 6)		/* write, other */
 #    define S_IXOTH	(S_IEXEC  >> 6)		/* execute, other */
-#  endif /* !S_IRUSR */
 
 #  define S_IRWXU	(S_IRUSR | S_IWUSR | S_IXUSR)
 #  define S_IRWXG	(S_IRGRP | S_IWGRP | S_IXGRP)
 #  define S_IRWXO	(S_IROTH | S_IWOTH | S_IXOTH)
-#endif /* !S_IRWXU */
 
 /* These are non-standard, but are used in builtins.c$symbolic_umask() */
 #define S_IRUGO		(S_IRUSR | S_IRGRP | S_IROTH)
diff --git a/histfile.c b/histfile.c
index 3eb7f29..3707f68 100644
--- a/histfile.c
+++ b/histfile.c
@@ -606,12 +606,14 @@
       history_lines_written_to_file = 0;
     }
 
+#if defined (HAVE_CHOWN)
   /* Make sure the new filename is owned by the same user as the old.  If one
      user is running this, it's a no-op.  If the shell is running after sudo
      with a shared history file, we don't want to leave the history file
      owned by root. */
   if (rv == 0 && exists)
     r = chown (filename, finfo.st_uid, finfo.st_gid);
+#endif
 
   xfree (filename);
   FREE (tempname);
@@ -753,12 +755,14 @@
       history_lines_written_to_file = 0;
     }
 
+#if defined (HAVE_CHOWN)
   /* Make sure the new filename is owned by the same user as the old.  If one
      user is running this, it's a no-op.  If the shell is running after sudo
      with a shared history file, we don't want to leave the history file
      owned by root. */
   if (rv == 0 && exists)
     mode = chown (histname, finfo.st_uid, finfo.st_gid);
+#endif
 
   FREE (histname);
   FREE (tempname);
-- 
2.10.2

